<?xml version="1.0" ?>
<launch>
    <arg name="namespace_prefix" default="panda_eob_calib"/>

    <!-- (start your robot's MoveIt! stack, e.g. include its moveit_planning_execution.launch) -->
    <include file="$(find panda_moveit_config)/launch/franka_control.launch">
        <arg name="robot_ip" value="172.16.0.2"/> <!-- set your robot ip -->
        <arg name="load_gripper" value="true"/>
    </include>        
    
    <!-- (start your tracking system's ROS driver) -->
    <include file="$(find realsense2_camera)/launch/rs_camera.launch"> </include>     

        <!-- fill in the following parameters according to your tracking system -->
        <arg name="markerSize"      default="0.025"/>
        <arg name="markerWidth"     default="8"/>
        <arg name="markerHeight"     default="11"/>
        <arg name="marker_frame"    default="chessboard_marker_frame"/>
        <arg name="ref_frame"       default="camera_link"/>

    <node pkg="chessboard" type="single" name="single">
        <remap from="/camera_info" to="/camera/color/camera_info" />
        <remap from="/image" to="/camera/color/image_raw" />
        <param name="marker_size"        value="$(arg markerSize)"/>
        <param name="marker_width"        value="$(arg markerWidth)"/>
        <param name="marker_height"        value="$(arg markerHeight)"/>
        <param name="reference_frame"    value="$(arg ref_frame)"/>
        <param name="camera_frame"       value="camera_color_optical_frame"/>
        <param name="marker_frame"       value="$(arg marker_frame)" />
    </node>


    <!-- (start hand-eye-calibration) -->
    <include file="$(find easy_handeye)/launch/calibrate.launch">
        <arg name="eye_on_hand" value="true"/>
        <arg name="namespace_prefix" value="$(arg namespace_prefix)"/>
        <arg name="move_group" value="panda_manipulator"  doc="the name of move_group for the automatic robot motion with MoveIt!" />
        <arg name="freehand_robot_movement" value="false"/>

        <!-- fill in the following parameters according to your robot's published tf frames -->
        <arg name="robot_base_frame" value="panda_link0"/>
        <arg name="robot_effector_frame" value="panda_hand_tcp"/>

        <!-- fill in the following parameters according to your tracking system's published tf frames -->
        <arg name="tracking_base_frame" value="camera_link"/>
        <arg name="tracking_marker_frame" value="chessboard_marker_frame"/>
    </include>

    <!-- (publish tf after the calibration) -->
    <!-- roslaunch easy_handeye publish.launch eye_on_hand:=false namespace_prefix:=$(arg namespace_prefix) -->

</launch>

